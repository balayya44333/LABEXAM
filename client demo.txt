package com.klef.jfsd.exam;

import org.hibernate.*;
import org.hibernate.cfg.Configuration;
import org.hibernate.criterion.Restrictions;

import java.util.List;

public class ClientDemo {
    public static void main(String[] args) {
        // Initialize SessionFactory
        SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();

        // Insert Records
        insertRecords(sessionFactory);

        // Perform Criteria Queries
        performCriteriaQueries(sessionFactory);

        // Close SessionFactory
        sessionFactory.close();
    }

    private static void insertRecords(SessionFactory sessionFactory) {
        Session session = sessionFactory.openSession();
        Transaction transaction = session.beginTransaction();

        Customer customer1 = new Customer();
        customer1.setName("John Doe");
        customer1.setEmail("john.doe@example.com");
        customer1.setAge(30);
        customer1.setLocation("New York");

        Customer customer2 = new Customer();
        customer2.setName("Jane Smith");
        customer2.setEmail("jane.smith@example.com");
        customer2.setAge(25);
        customer2.setLocation("Los Angeles");

        session.save(customer1);
        session.save(customer2);

        transaction.commit();
        session.close();

        System.out.println("Records inserted successfully.");
    }

    private static void performCriteriaQueries(SessionFactory sessionFactory) {
        Session session = sessionFactory.openSession();

        // Equal
        Criteria criteria = session.createCriteria(Customer.class);
        criteria.add(Restrictions.eq("location", "New York"));
        List<Customer> equalResult = criteria.list();
        System.out.println("Customers in New York: " + equalResult);

        // Greater than
        criteria = session.createCriteria(Customer.class);
        criteria.add(Restrictions.gt("age", 26));
        List<Customer> greaterThanResult = criteria.list();
        System.out.println("Customers older than 26: " + greaterThanResult);

        // Between
        criteria = session.createCriteria(Customer.class);
        criteria.add(Restrictions.between("age", 20, 30));
        List<Customer> betweenResult = criteria.list();
        System.out.println("Customers aged between 20 and 30: " + betweenResult);

        // Like
        criteria = session.createCriteria(Customer.class);
        criteria.add(Restrictions.like("name", "Jane%"));
        List<Customer> likeResult = criteria.list();
        System.out.println("Customers with names starting with 'Jane': " + likeResult);

        session.close();
    }
}
